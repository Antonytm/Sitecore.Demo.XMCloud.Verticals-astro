---
import JssLayout from "../layouts/JssLayout.astro";
import { SitecorePagePropsFactory } from "../lib/page-props-factory";
import { SitecoreContextMap } from "@astro-sitecore-jss/astro-sitecore-jss";
import type {
  LayoutServiceContext,
  RouteData,
} from "@sitecore-jss/sitecore-jss/layout";
import config from "../temp/config";
import Bootstrap from "@/components/Bootstrap.astro";

export const prerender = false;

export type SitecoreContextValue = LayoutServiceContext & {
  itemId?: string;
  route?: RouteData;
};

let pageProps = {
  layoutData: {},
};

try {
  const sc_site = Astro.url.searchParams.get("sc_site");
  const sc_lang = Astro.url.searchParams.get("sc_lang");

  const { path } = Astro.params;
  let site = config.sitecoreSiteName;
  let language = sc_lang ?? config.defaultLanguage;
  let cleanPath = path ?? "/";

  if (path) {
    const parts = path.split("/");
    if (parts[0]) {
      language = parts[0];
      cleanPath = cleanPath.replace(`${parts[0]}`, "") ?? "/";
    }
  }

  Astro.locals.site = sc_site ?? site ?? config.sitecoreSiteName;

  let sitecorePagePropsFactory = new SitecorePagePropsFactory(
    Astro.locals.site
  );
  pageProps = await sitecorePagePropsFactory.create(cleanPath, language);
  if (!pageProps.layoutData?.sitecore?.route) {
    return new Response("Not found", { status: 404 });
  }

  let scContext = pageProps.layoutData.sitecore.context as SitecoreContextValue;
  scContext.route = pageProps.layoutData.sitecore.route;
  scContext.itemId = pageProps.layoutData.sitecore.route.itemId;

  SitecoreContextMap.setKey("scContext", scContext);
  SitecoreContextMap.setKey("dictionary", pageProps.dictionary);
} catch (error) {
  console.error(error);
}
---

<Bootstrap pageProps={pageProps} />
<JssLayout layoutData={pageProps.layoutData} />

<script is:inline>
  // This is a workaround to fix the 'process is not defined' error in Bootstrap component.
  // 'debug' library used in CloudSDK has a dependency on a variable from the node environment)
  const process = {};
</script>
